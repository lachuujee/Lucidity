---
- name: Multi-account EC2 EBS usage report
  hosts: localhost
  gather_facts: no
  vars:
    accounts:
      - id: "111111111111"
        role_arn: "arn:aws:iam::111111111111:role/AnsibleCrossAccountRole"
      - id: "222222222222"
        role_arn: "arn:aws:iam::222222222222:role/AnsibleCrossAccountRole"
    s3_bucket: "your-s3-bucket-name"
    report_local_path: "/tmp/ec2_ebs_usage_report_{{ ansible_date_time.date }}.csv"
    report_s3_key: "reports/ec2_ebs_usage_report_{{ ansible_date_time.date }}.csv"

  tasks:
    - name: Initialize master data list
      set_fact:
        master_data: []

    - name: Loop over accounts to collect data
      block:
        - name: Assume role in {{ item.id }}
          amazon.aws.sts_assume_role:
            role_arn: "{{ item.role_arn }}"
            role_session_name: "ansible-session"
          register: assumed_role
          delegate_to: localhost

        - name: Get EC2 instances in {{ item.id }}
          amazon.aws.ec2_instance_info:
            aws_access_key: "{{ assumed_role.sts_creds.access_key }}"
            aws_secret_key: "{{ assumed_role.sts_creds.secret_key }}"
            aws_security_token: "{{ assumed_role.sts_creds.session_token }}"
            filters:
              instance-state-name: running
          register: ec2_instances

        - name: Get volumes info per instance in {{ item.id }}
          amazon.aws.ec2_vol_info:
            aws_access_key: "{{ assumed_role.sts_creds.access_key }}"
            aws_secret_key: "{{ assumed_role.sts_creds.secret_key }}"
            aws_security_token: "{{ assumed_role.sts_creds.session_token }}"
            volume_ids: "{{ item_inst.block_device_mappings | map(attribute='ebs.volume_id') | list }}"
          loop: "{{ ec2_instances.instances }}"
          loop_control:
            loop_var: item_inst
          register: volumes_info

        - name: Run df to get volume usage on instances in {{ item.id }}
          amazon.aws.aws_ssm:
            aws_access_key: "{{ assumed_role.sts_creds.access_key }}"
            aws_secret_key: "{{ assumed_role.sts_creds.secret_key }}"
            aws_security_token: "{{ assumed_role.sts_creds.session_token }}"
            instance_ids: "{{ ec2_instances.instances | map(attribute='instance_id') | list }}"
            document_name: AWS-RunShellScript
            parameters:
              commands:
                - df -h -x tmpfs -x devtmpfs
          register: df_results

        - name: Combine data for account {{ item.id }}
          set_fact:
            master_data: "{{ master_data + [ {'account_id': item.id, 'instances': ec2_instances.instances, 'volumes': volumes_info.results, 'df': df_results.command_invocations} ] }}"
      loop: "{{ accounts }}"

    - name: Generate CSV report file
      template:
        src: disk_usage_report.csv.j2
        dest: "{{ report_local_path }}"
      vars:
        report_data: "{{ master_data }}"

    - name: Upload CSV report to S3 bucket
      community.aws.s3:
        bucket: "{{ s3_bucket }}"
        object: "{{ report_s3_key }}"
        src: "{{ report_local_path }}"
        mode: put
